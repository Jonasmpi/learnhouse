version: "3.9"

services:
  app:
    build: .
    ports:
      - "80:80"
    volumes:
      - .:/usr/learnhouse
    env_file:
      - ./extra/example-learnhouse-conf.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - APP_BASE_URL=${SERVICE_FQDN_APP} # Automatically generated FQDN
      - APP_SECRET_KEY=${SERVICE_REALBASE64_64_APP} # Generated 64-bit Base64-encoded secret
      - DB_PASSWORD=${SERVICE_PASSWORD_DB} # Auto-generated password for DB connection
      - REDIS_PASSWORD=${SERVICE_PASSWORD_REDIS} # Auto-generated password for Redis connection

  collaboration:
    build: apps/collaboration/.
    ports:
      - "1998:1998"
    environment:
      - COLLABORATION_FQDN=${SERVICE_FQDN_COLLABORATION} # FQDN for collaboration service
      - COLLABORATION_SECRET_KEY=${SERVICE_REALBASE64_64_COLLABORATION} # Unique secret

  db:
    image: postgres:16-alpine
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=learnhouse
      - POSTGRES_PASSWORD=${SERVICE_PASSWORD_DB} # Uses Coolify-generated password
      - POSTGRES_DB=learnhouse
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U learnhouse"]
      interval: 5s
      timeout: 4s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data

  redis:
    image: redis:7.2.3
    restart: always
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${SERVICE_PASSWORD_REDIS} # Uses Coolify-generated Redis password
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 4s
      retries: 5
    volumes:
      - redis-data:/data

  chromadb:
    image: chromadb/chroma:latest
    ports:
      - "8000:8000"
    environment:
      - CHROMA_DB_PATH=/data
      - CHROMA_SECRET_KEY=${SERVICE_REALBASE64_64_CHROMA} # Unique secret for Chroma
    volumes:
      - chroma-data:/data

volumes:
  db-data:
  redis-data:
  chroma-data:
