version: "3.9"

services:
  app:
    build: .
    ports:
      - "81:80"
    volumes:
      - .:/usr/learnhouse
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # Frontend
      - LEARNHOUSE_SITE_NAME=nAIxt Learning
      - LEARNHOUSE_SITE_DESCRIPTION= Tailored AI Education
      - LEARNHOUSE_CONTACT_EMAIL=info@naixt-technologies.de
      - NEXT_PUBLIC_LEARNHOUSE_MULTI_ORG=false
      - NEXT_PUBLIC_LEARNHOUSE_DEFAULT_ORG=default
      - NEXT_PUBLIC_LEARNHOUSE_TOP_DOMAIN=${SERVICE_FQDN_APP} 
      - NEXTAUTH_SECRET=${SERVICE_REALBASE64_64_APP} 
      - NEXTAUTH_URL=https://${SERVICE_FQDN_APP}
      - LEARNHOUSE_DOMAIN=${SERVICE_FQDN_APP}
      - LEARNHOUSE_SSL=${LEARNHOUSE_SSL:-true}
      - LEARNHOUSE_ALLOWED_ORIGINS=https://${SERVICE_FQDN_APP},http://localhost:3000,http://localhost:3001,https://os8o0w8wws8ow44sgo4ck00o.naixt-digital.de,http://os8o0w8wws8ow44sgo4ck00o.naixt-digital.de
      - LEARNHOUSE_SELF_HOSTED=true
      - LEARNHOUSE_DEVELOPMENT_MODE=False
      # Backend
      - LEARNHOUSE_COOKIE_DOMAIN=.${SERVICE_FQDN_APP} # Dynamic FQDN for cookies
      - LEARNHOUSE_SQL_CONNECTION_STRING=postgresql://learnhouse:${SERVICE_PASSWORD_DB}@db:5432/learnhouse 
      - LEARNHOUSE_REDIS_CONNECTION_STRING=redis://:${SERVICE_PASSWORD_REDIS}@redis:6379/learnhouse 
      - LEARNHOUSE_CHROMADB_HOST=${SERVICE_FQDN_CHROMADB} 

  collaboration:
    build: apps/collaboration/.
    ports:
      - "1998:1998"
    environment:
      - COLLABORATION_FQDN=${SERVICE_FQDN_COLLABORATION} 
      - COLLABORATION_SECRET_KEY=${SERVICE_REALBASE64_64_COLLABORATION} 

  db:
    image: postgres:16-alpine
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=learnhouse
      - POSTGRES_PASSWORD=${SERVICE_PASSWORD_DB} 
      - POSTGRES_DB=learnhouse
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U learnhouse" ]
      interval: 5s
      timeout: 4s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data

  redis:
    image: redis:7.2.3
    restart: always
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${SERVICE_PASSWORD_REDIS} 
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 4s
      retries: 5
    volumes:
      - redis-data:/data

  chromadb:
    image: chromadb/chroma:latest
    ports:
      - "8001:8000"
    environment:
      - CHROMA_DB_PATH=/data
      - CHROMA_SECRET_KEY=${SERVICE_REALBASE64_64_CHROMA} # Unique secret for Chroma
    volumes:
      - chroma-data:/data

volumes:
  db-data:
  redis-data:
  chroma-data:
